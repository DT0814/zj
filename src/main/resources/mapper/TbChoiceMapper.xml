<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xawl.zj.dao.TbChoiceMapper">
    <resultMap id="BaseResultMap" type="com.xawl.zj.pojo.TbChoice">
        <id column="cid" property="cid" jdbcType="INTEGER"/>
        <result column="stem" property="stem" jdbcType="CHAR"/>
        <result column="answer" property="answer" jdbcType="CHAR"/>
        <result column="A" property="a" jdbcType="CHAR"/>
        <result column="B" property="b" jdbcType="CHAR"/>
        <result column="C" property="c" jdbcType="CHAR"/>
        <result column="D" property="d" jdbcType="CHAR"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="did" property="did" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    cid, stem, answer, A, B, C, D, score, pid, did
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xawl.zj.pojo.TbChoiceExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_choice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_choice
        where cid = #{cid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_choice
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xawl.zj.pojo.TbChoiceExample">
        delete from tb_choice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xawl.zj.pojo.TbChoice">
    insert into tb_choice (cid, stem, answer, 
      A, B, C, D, 
      score, pid, did)
    values (#{cid,jdbcType=INTEGER}, #{stem,jdbcType=CHAR}, #{answer,jdbcType=CHAR}, 
      #{a,jdbcType=CHAR}, #{b,jdbcType=CHAR}, #{c,jdbcType=CHAR}, #{d,jdbcType=CHAR}, 
      #{score,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{did,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.xawl.zj.pojo.TbChoice">
        insert into tb_choice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                cid,
            </if>
            <if test="stem != null">
                stem,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="a != null">
                A,
            </if>
            <if test="b != null">
                B,
            </if>
            <if test="c != null">
                C,
            </if>
            <if test="d != null">
                D,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="did != null">
                did,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="stem != null">
                #{stem,jdbcType=CHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=CHAR},
            </if>
            <if test="a != null">
                #{a,jdbcType=CHAR},
            </if>
            <if test="b != null">
                #{b,jdbcType=CHAR},
            </if>
            <if test="c != null">
                #{c,jdbcType=CHAR},
            </if>
            <if test="d != null">
                #{d,jdbcType=CHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="did != null">
                #{did,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xawl.zj.pojo.TbChoiceExample" resultType="java.lang.Integer">
        select count(*) from tb_choice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_choice
        <set>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=INTEGER},
            </if>
            <if test="record.stem != null">
                stem = #{record.stem,jdbcType=CHAR},
            </if>
            <if test="record.answer != null">
                answer = #{record.answer,jdbcType=CHAR},
            </if>
            <if test="record.a != null">
                A = #{record.a,jdbcType=CHAR},
            </if>
            <if test="record.b != null">
                B = #{record.b,jdbcType=CHAR},
            </if>
            <if test="record.c != null">
                C = #{record.c,jdbcType=CHAR},
            </if>
            <if test="record.d != null">
                D = #{record.d,jdbcType=CHAR},
            </if>
            <if test="record.score != null">
                score = #{record.score,jdbcType=INTEGER},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.did != null">
                did = #{record.did,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_choice
        set cid = #{record.cid,jdbcType=INTEGER},
        stem = #{record.stem,jdbcType=CHAR},
        answer = #{record.answer,jdbcType=CHAR},
        A = #{record.a,jdbcType=CHAR},
        B = #{record.b,jdbcType=CHAR},
        C = #{record.c,jdbcType=CHAR},
        D = #{record.d,jdbcType=CHAR},
        score = #{record.score,jdbcType=INTEGER},
        pid = #{record.pid,jdbcType=INTEGER},
        did = #{record.did,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xawl.zj.pojo.TbChoice">
        update tb_choice
        <set>
            <if test="stem != null">
                stem = #{stem,jdbcType=CHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=CHAR},
            </if>
            <if test="a != null">
                A = #{a,jdbcType=CHAR},
            </if>
            <if test="b != null">
                B = #{b,jdbcType=CHAR},
            </if>
            <if test="c != null">
                C = #{c,jdbcType=CHAR},
            </if>
            <if test="d != null">
                D = #{d,jdbcType=CHAR},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="did != null">
                did = #{did,jdbcType=INTEGER},
            </if>
        </set>
        where cid = #{cid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xawl.zj.pojo.TbChoice">
    update tb_choice
    set stem = #{stem,jdbcType=CHAR},
      answer = #{answer,jdbcType=CHAR},
      A = #{a,jdbcType=CHAR},
      B = #{b,jdbcType=CHAR},
      C = #{c,jdbcType=CHAR},
      D = #{d,jdbcType=CHAR},
      score = #{score,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      did = #{did,jdbcType=INTEGER}
    where cid = #{cid,jdbcType=INTEGER}
  </update>

    <!--生成结束-->
    <select id="selectByCount" parameterType="java.lang.Integer" resultType="com.xawl.zj.pojo.TbChoice">
        select * from tb_choice
        ORDER BY RAND() LIMIT #{snum}
    </select>
    <select id="findAll" resultType="com.xawl.zj.pojo.ChoiceResult">
        SELECT * FROM tb_choice choice ,tb_difficulty difficulty,tb_point point WHERE choice.pid=point.pid AND
        choice.did=difficulty.did
    </select>
    <select id="findChoiceRandom" parameterType="java.util.Map" resultType="com.xawl.zj.pojo.TbChoice">
        select * from tb_choice
        <where>
            <if test="pid != 0">
                pid = #{pid}
            </if>
            <if test="did != 0">
                AND did =#{did}
            </if>
        </where>
        ORDER BY RAND() LIMIT #{num}
    </select>

    <select id="selectByPidAndNum" parameterType="java.util.Map" resultType="com.xawl.zj.pojo.TbChoice">
        select * from tb_choice
                 where  pid = #{pid}
                 ORDER BY RAND() LIMIT #{num}
    </select>

    <select id="getOneRandom" resultType="com.xawl.zj.pojo.TbChoice">
        select * from tb_choice
        ORDER BY RAND() LIMIT 1
    </select>
</mapper>